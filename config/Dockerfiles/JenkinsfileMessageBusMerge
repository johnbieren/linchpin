import groovy.json.*

properties(
        [
                buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '50', daysToKeepStr: '', numToKeepStr: '15')),
                parameters(
                    [
                        string(description: 'fedmsg msg', name: 'CI_MESSAGE'),
                    ]
                ),
                pipelineTriggers(
                        [[$class: 'CIBuildTrigger',
                          noSquash: true,
                          providerData: [
                              $class: 'FedMsgSubscriberProviderData',
                              name: 'fedora-fedmsg',
                              overrides: [
                                  topic: 'org.centos.prod.ci.linchpin.pr_merge.queued'
                              ],
                              checks: []
                          ]
                        ]]
                )
        ]
)

node('master') {
    ansiColor('xterm') {
        timestamps {
            stage('ci-linchpin-messageBus-trigger') {

                echo "CI_MESSAGE: ${env.CI_MESSAGE}"

                // parse CI_MESSAGE json
                def msg_content = readJSON text: CI_MESSAGE

                def ghprbPullId = msg_content['ghprbPullId']
                def ghprbPullAuthorLogin = msg_content['ghprbPullAuthorLogin']
                def ghprbActualCommit = msg_content['ghprbActualCommit']
                def sha1 = msg_content['sha1']

                currentBuild.displayName = "Build#: ${env.BUILD_NUMBER} - PR: ${ghprbPullId} - Author: ${ghprbPullAuthorLogin}"
                if (ghprbActualCommit != null && ghprbActualCommit != "develop") {
                  currentBuild.description = "<a href=\"https://github.com/${msg_content.ghprbGhRepository}/pull/${ghprbPullId}\">PR #${ghprbPullId} (${ghprbPullAuthorLogin})</a>"
                }

                build job: "ci-linchpin-merge",
                  parameters: [
                    string(name: 'ghprbActualCommit',
                           value: "${ghprbActualCommit}"),
                    string(name: 'ghprbPullId',
                           value: "${ghprbPullId}"),
                    string(name: 'ghprbGhRepository', 
                           value: "${env.ghprbGhRepository}"),
                    string(name: 'ghprbPullAuthorLogin',
                           value: "${ghprbPullAuthorLogin}"),
                    string(name: 'sha1',
                           value: "${sha1}")
                  ],
                  wait: true
            }
        }
    }
}
